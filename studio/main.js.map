{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"Studio.libraries['react']\"","webpack:///external \"Studio\"","webpack:///external \"Studio.libraries['filesaver.js-npm']\"","webpack:///external \"Studio.libraries['prop-types']\"","webpack:///./studio/b64toBlob.js","webpack:///./studio/XlsxUploadButton.js","webpack:///./studio/main_dev.js","webpack:///./studio/XlsxEditor.js","webpack:///./studio/XlsxTemplateProperties.js"],"names":["b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","blob","Blob","type","_xlsxTemplateUploadButton","XlsxUploadButton","props","inputFileRef","React","createRef","e","target","files","xlsxDefaults","uploadCallback","file","reader","FileReader","onloadend","current","value","forNew","Studio","workspaces","save","xlsx","Object","assign","contentRaw","result","substring","indexOf","name","replace","api","post","data","response","__entitySet","addExistingEntity","openTab","updateEntity","_id","tab","entity","patch","loadEntity","onerror","errMsg","Error","alert","readAsDataURL","options","defaults","dispatchEvent","MouseEvent","view","window","bubbles","cancelable","display","upload","renderUpload","openFileDialog","Component","propTypes","PropTypes","object","onUpdate","func","isRequired","addEntitySet","faIcon","visibleName","onNew","OpenUpload","entityTreePosition","addEditorComponent","XlsxEditor","entityEditorComponentKeyResolvers","editorKey","editorProps","extensions","assets","icon","embeddingCode","displayName","onPreview","preview","showWarning","getSettingValueByKey","setSetting","openModal","onDownload","fileSaver","saveAs","onUpload","cb","getPreviewContent","previewLoadFinish","resolveUrl","emptyMessage","key","addToolbarComponent","addPropertiesComponent","XlsxTemplateProperties","title","recipe","previewListeners","request","entities","template","enabled","ImageEditor","download","EntityRefSelect","removeInvalidXlsxTemplateReferences","onChange","xlsxTemplate","updatedXlsxTemplates","keys","filter","k","shortid","updatedXlsxAssets","templateAssetShortid","oldXlsxTemplate","prop","newValue","selected","references","xlsxTemplates","map","foundItems","selectItems","foundAssets","selectAssets"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = Studio.libraries['react'];","module.exports = Studio;","module.exports = Studio.libraries['filesaver.js-npm'];","module.exports = Studio.libraries['prop-types'];","\nconst b64toBlob = (b64Data, contentType = '', sliceSize = 512) => {\n  const byteCharacters = atob(b64Data)\n  const byteArrays = []\n\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    const slice = byteCharacters.slice(offset, offset + sliceSize)\n\n    const byteNumbers = new Array(slice.length)\n    for (let i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i)\n    }\n\n    const byteArray = new Uint8Array(byteNumbers)\n\n    byteArrays.push(byteArray)\n  }\n\n  const blob = new Blob(byteArrays, { type: contentType })\n  return blob\n}\n\nexport default b64toBlob\n","import PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport Studio from 'jsreport-studio'\r\n\r\nlet _xlsxTemplateUploadButton\r\n\r\nclass XlsxUploadButton extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.inputFileRef = React.createRef()\r\n  }\r\n\r\n  static propTypes = {\r\n    tab: PropTypes.object,\r\n    onUpdate: PropTypes.func.isRequired\r\n  }\r\n\r\n  // we need to have global action in main_dev which is triggered when users clicks on + on images\r\n  // this triggers invisible button in the toolbar\r\n  static OpenUpload (forNew = true, options) {\r\n    _xlsxTemplateUploadButton.openFileDialog(forNew, options)\r\n  }\r\n\r\n  componentDidMount () {\r\n    _xlsxTemplateUploadButton = this\r\n  }\r\n\r\n  upload (e) {\r\n    if (!e.target.files.length) {\r\n      return\r\n    }\r\n\r\n    const xlsxDefaults = e.target.xlsxDefaults\r\n    const uploadCallback = e.target.uploadCallback\r\n\r\n    delete e.target.xlsxDefaults\r\n    delete e.target.uploadCallback\r\n\r\n    const file = e.target.files[0]\r\n    const reader = new FileReader()\r\n\r\n    reader.onloadend = async () => {\r\n      this.inputFileRef.current.value = ''\r\n      if (this.forNew) {\r\n        if (Studio.workspaces) {\r\n          await Studio.workspaces.save()\r\n        }\r\n\r\n        let xlsx = {}\r\n\r\n        if (xlsxDefaults != null) {\r\n          xlsx = Object.assign(xlsx, xlsxDefaults)\r\n        }\r\n\r\n        xlsx = Object.assign(xlsx, {\r\n          contentRaw: reader.result.substring(reader.result.indexOf('base64,') + 'base64,'.length),\r\n          name: file.name.replace(/.xlsx$/, '')\r\n        })\r\n\r\n        const response = await Studio.api.post('/odata/xlsxTemplates', {\r\n          data: xlsx\r\n        })\r\n\r\n        response.__entitySet = 'xlsxTemplates'\r\n\r\n        Studio.addExistingEntity(response)\r\n        Studio.openTab(Object.assign({}, response))\r\n      } else {\r\n        if (Studio.workspaces) {\r\n          Studio.updateEntity({\r\n            _id: this.props.tab.entity._id,\r\n            contentRaw: reader.result.substring(reader.result.indexOf('base64,') + 'base64,'.length)\r\n          })\r\n\r\n          await Studio.workspaces.save()\r\n        } else {\r\n          await Studio.api.patch(`/odata/xlsxTemplates(${this.props.tab.entity._id})`, {\r\n            data: {\r\n              contentRaw: reader.result.substring(reader.result.indexOf('base64,') + 'base64,'.length)\r\n            }\r\n          })\r\n          Studio.loadEntity(this.props.tab.entity._id, true)\r\n        }\r\n      }\r\n\r\n      if (uploadCallback) {\r\n        uploadCallback()\r\n      }\r\n    }\r\n\r\n    reader.onerror = function () {\r\n      const errMsg = 'There was an error reading the file!'\r\n\r\n      if (uploadCallback) {\r\n        uploadCallback(new Error(errMsg))\r\n      }\r\n\r\n      alert(errMsg)\r\n    }\r\n\r\n    reader.readAsDataURL(file)\r\n  }\r\n\r\n  openFileDialog (forNew, options = {}) {\r\n    this.forNew = forNew\r\n\r\n    if (options.defaults) {\r\n      this.inputFileRef.current.xlsxDefaults = options.defaults\r\n    } else {\r\n      delete this.inputFileRef.current.xlsxDefaults\r\n    }\r\n\r\n    if (options.uploadCallback) {\r\n      this.inputFileRef.current.uploadCallback = options.uploadCallback\r\n    } else {\r\n      delete this.inputFileRef.current.uploadCallback\r\n    }\r\n\r\n    this.inputFileRef.current.dispatchEvent(new MouseEvent('click', {\r\n      view: window,\r\n      bubbles: false,\r\n      cancelable: true\r\n    }))\r\n  }\r\n\r\n  renderUpload () {\r\n    return (\r\n      <input\r\n        type='file'\r\n        key='file'\r\n        ref={this.inputFileRef}\r\n        style={{ display: 'none' }}\r\n        onChange={(e) => this.upload(e)} accept='.xlsx'\r\n      />\r\n    )\r\n  }\r\n\r\n  render () {\r\n    return this.renderUpload(true)\r\n  }\r\n}\r\n\r\nexport default XlsxUploadButton\r\n","import fileSaver from 'filesaver.js-npm'\r\nimport XlsxEditor from './XlsxEditor.js'\r\nimport b64toBlob from './b64toBlob.js'\r\nimport XlsxUploadButton from './XlsxUploadButton.js'\r\nimport XlsxTemplateProperties from './XlsxTemplateProperties.js'\r\nimport Studio, { Preview } from 'jsreport-studio'\r\n\r\nStudio.addEntitySet({\r\n  name: 'xlsxTemplates',\r\n  faIcon: 'fa-file-excel-o',\r\n  visibleName: 'xlsx template',\r\n  onNew: (options = {}) => XlsxUploadButton.OpenUpload(true, options),\r\n  entityTreePosition: 500\r\n})\r\n\r\nStudio.addEditorComponent('xlsxTemplates', XlsxEditor)\r\n\r\nStudio.entityEditorComponentKeyResolvers.push((entity) => {\r\n  if (entity.__entitySet === 'xlsxTemplates') {\r\n    let editorKey = 'xlsxTemplates'\r\n    const editorProps = {}\r\n\r\n    if (Studio.extensions.assets) {\r\n      // use assets editor for xlsxTemplate when\r\n      // asset extension exists\r\n      editorKey = 'assets'\r\n\r\n      editorProps.icon = 'fa-file-excel-o'\r\n      editorProps.embeddingCode = ''\r\n      editorProps.displayName = entity.name\r\n\r\n      editorProps.onPreview = () => {\r\n        if (\r\n          Studio.extensions.xlsx.options.preview.showWarning !== false &&\r\n          Studio.getSettingValueByKey('office-preview-informed', false) !== true\r\n        ) {\r\n          Studio.setSetting('office-preview-informed', true)\r\n\r\n          Studio.openModal(() => (\r\n            <div>\r\n              We need to upload your xlsx to our publicly hosted server to be able to use\r\n              Office Online Service for previewing here in the studio. You can disable it in the configuration, see <a href='https://jsreport.net/learn/xlsx#preview-in-studio' rel='noopener noreferrer' target='_blank'>the docs</a> for details.\r\n            </div>\r\n          ))\r\n        }\r\n      }\r\n\r\n      editorProps.onDownload = (entity) => {\r\n        const blob = b64toBlob(entity.contentRaw, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')\r\n        fileSaver.saveAs(blob, entity.name)\r\n      }\r\n\r\n      editorProps.onUpload = (entity, cb) => {\r\n        XlsxUploadButton.OpenUpload(false, {\r\n          uploadCallback: cb\r\n        })\r\n      }\r\n\r\n      editorProps.getPreviewContent = (entity, { previewLoadFinish }) => {\r\n        return (\r\n          <Preview\r\n            onLoad={previewLoadFinish}\r\n            initialSrc={Studio.resolveUrl(`xlsxTemplates/office/${entity._id}/content`)}\r\n          />\r\n        )\r\n      }\r\n\r\n      editorProps.emptyMessage = 'xlsxTemplate is empty'\r\n    }\r\n\r\n    return {\r\n      key: editorKey,\r\n      entity: editorKey === 'assets' ? {\r\n        ...entity,\r\n        name: `${entity.name}.xlsx`\r\n      } : entity,\r\n      props: editorProps\r\n    }\r\n  }\r\n})\r\n\r\nStudio.addToolbarComponent(XlsxUploadButton)\r\nStudio.addPropertiesComponent(XlsxTemplateProperties.title, XlsxTemplateProperties, (entity) => entity.__entitySet === 'templates' && entity.recipe === 'xlsx')\r\n\r\nStudio.previewListeners.push((request, entities) => {\r\n  if (request.template.recipe !== 'xlsx') {\r\n    return\r\n  }\r\n\r\n  if (Studio.extensions.xlsx.options.preview.enabled === false) {\r\n    return\r\n  }\r\n\r\n  if (Studio.extensions.xlsx.options.preview.showWarning === false) {\r\n    return\r\n  }\r\n\r\n  if (Studio.getSettingValueByKey('office-preview-informed', false) === true) {\r\n    return\r\n  }\r\n\r\n  Studio.setSetting('office-preview-informed', true)\r\n\r\n  Studio.openModal(() => (\r\n    <div>\r\n    We need to upload your office report to our publicly hosted server to be able to use\r\n    Excel Online Service for previewing here in the studio. You can disable it in the configuration, see <a href='https://jsreport.net/learn/xlsx' rel='noopener noreferrer' target='_blank'>https://jsreport.net/learn/xlsx</a> for details.\r\n    </div>\r\n  ))\r\n})\r\n","import PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport b64toBlob from './b64toBlob.js'\r\nimport XlsxUploadButton from './XlsxUploadButton.js'\r\nimport fileSaver from 'filesaver.js-npm'\r\n\r\nexport default class ImageEditor extends Component {\r\n  static propTypes = {\r\n    entity: PropTypes.object.isRequired\r\n  }\r\n\r\n  download () {\r\n    const blob = b64toBlob(this.props.entity.contentRaw, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')\r\n    fileSaver.saveAs(blob, this.props.entity.name)\r\n  }\r\n\r\n  render () {\r\n    const { entity } = this.props\r\n\r\n    return (\r\n      <div className='custom-editor'>\r\n        <div><h1><i className='fa fa-file-excel-o' /> {entity.name}</h1></div>\r\n        <div>\r\n          <button className='button confirmation' onClick={() => this.download()}>\r\n            <i className='fa fa-download' /> Download xlsx template\r\n          </button>\r\n          <button className='button confirmation' onClick={() => XlsxUploadButton.OpenUpload(false)}>\r\n            <i className='fa fa-upload' /> Upload (edit) xlsx template\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Studio from 'jsreport-studio'\r\n\r\nconst EntityRefSelect = Studio.EntityRefSelect\r\n\r\nexport default class XlsxTemplateProperties extends Component {\r\n  static selectItems (entities) {\r\n    return Object.keys(entities).filter((k) => entities[k].__entitySet === 'xlsxTemplates').map((k) => entities[k])\r\n  }\r\n\r\n  static selectAssets (entities) {\r\n    return Object.keys(entities).filter((k) => entities[k].__entitySet === 'assets').map((k) => entities[k])\r\n  }\r\n\r\n  static title (entity, entities) {\r\n    if (\r\n      (!entity.xlsxTemplate || !entity.xlsxTemplate.shortid) &&\r\n      (!entity.xlsx || !entity.xlsx.templateAssetShortid)\r\n    ) {\r\n      return 'xlsx template'\r\n    }\r\n\r\n    const foundItems = XlsxTemplateProperties.selectItems(entities).filter((e) => entity.xlsxTemplate != null && entity.xlsxTemplate.shortid === e.shortid)\r\n    const foundAssets = XlsxTemplateProperties.selectAssets(entities).filter((e) => entity.xlsx != null && entity.xlsx.templateAssetShortid === e.shortid)\r\n\r\n    if (!foundItems.length && !foundAssets.length) {\r\n      return 'xlsx template'\r\n    }\r\n\r\n    let name\r\n\r\n    if (foundAssets.length) {\r\n      name = foundAssets[0].name\r\n    } else {\r\n      name = foundItems[0].name\r\n    }\r\n\r\n    return 'xlsx template: ' + name\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.removeInvalidXlsxTemplateReferences()\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    this.removeInvalidXlsxTemplateReferences()\r\n  }\r\n\r\n  removeInvalidXlsxTemplateReferences () {\r\n    const { entity, entities, onChange } = this.props\r\n\r\n    if (!entity.xlsxTemplate && !entity.xlsx) {\r\n      return\r\n    }\r\n\r\n    const updatedXlsxTemplates = Object.keys(entities).filter((k) => entities[k].__entitySet === 'xlsxTemplates' && entity.xlsxTemplate != null && entities[k].shortid === entity.xlsxTemplate.shortid)\r\n    const updatedXlsxAssets = Object.keys(entities).filter((k) => entities[k].__entitySet === 'assets' && entity.xlsx != null && entities[k].shortid === entity.xlsx.templateAssetShortid)\r\n\r\n    if (entity.xlsx && entity.xlsx.templateAssetShortid && updatedXlsxAssets.length === 0) {\r\n      onChange({ _id: entity._id, xlsx: null })\r\n    }\r\n\r\n    if (entity.xlsxTemplate && entity.xlsxTemplate.shortid && updatedXlsxTemplates.length === 0) {\r\n      onChange({ _id: entity._id, xlsxTemplate: null })\r\n    }\r\n  }\r\n\r\n  changeXlsxTemplate (oldXlsxTemplate, prop, value) {\r\n    let newValue\r\n\r\n    if (value == null) {\r\n      newValue = { ...oldXlsxTemplate }\r\n      newValue[prop] = null\r\n    } else {\r\n      return { ...oldXlsxTemplate, [prop]: value }\r\n    }\r\n\r\n    newValue = Object.keys(newValue).length ? newValue : null\r\n\r\n    return newValue\r\n  }\r\n\r\n  render () {\r\n    const { entity, onChange } = this.props\r\n\r\n    return (\r\n      <div className='properties-section'>\r\n        <div className='form-group'>\r\n          <label>xlsx asset</label>\r\n          <EntityRefSelect\r\n            headingLabel='Select docx template'\r\n            value={entity.xlsx ? entity.xlsx.templateAssetShortid : ''}\r\n            onChange={(selected) => onChange({\r\n              _id: entity._id,\r\n              xlsx: selected != null && selected.length > 0 ? { templateAssetShortid: selected[0].shortid } : null\r\n            })}\r\n            filter={(references) => ({ assets: references.assets })}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label>xlsx template (deprecated)</label>\r\n          <EntityRefSelect\r\n            headingLabel='Select xlsx template'\r\n            filter={(references) => ({ xlsxTemplates: references.xlsxTemplates })}\r\n            value={entity.xlsxTemplate ? entity.xlsxTemplate.shortid : null}\r\n            onChange={(selected) => onChange({\r\n              _id: entity._id,\r\n              xlsxTemplate: selected != null && selected.length > 0 ? { shortid: selected[0].shortid } : null\r\n            })}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}